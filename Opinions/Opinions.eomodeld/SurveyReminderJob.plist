
{
    attributes =
    (

       {
           columnName = assignmentOfferingId;
           name = assignmentOfferingId;
           prototypeName = foreignId;
       },

       {
           columnName = dueTime;
           name = dueTime;
           prototypeName = dateTime;
       },

       {
           allowsNull = N;
           columnName = enqueueTime;
           name = enqueueTime;
           prototypeName = dateTime;
       },

       {
           name = id;
           prototypeName = id;
       },

       {
           allowsNull = N;
           columnName = isCancelled;
           name = isCancelled;
           prototypeName = boolean;
           userInfo =
           {
               isScalar = true;
               scalarDefault = false;
               type = boolean;
           };
       },

       {
           allowsNull = N;
           columnName = isPaused;
           name = isPaused;
           prototypeName = boolean;
           userInfo =
           {
               isScalar = true;
               scalarDefault = false;
               type = boolean;
           };
       },

       {
           allowsNull = N;
           columnName = priority;
           name = priority;
           prototypeName = integer;
           userInfo =
           {
               isScalar = true;
               scalarConversionMethodName = intValue;
               scalarDefault = 0;
               type = int;
               valueClassName = Integer;
           };
       },

       {
           columnName = scheduledTime;
           name = scheduledTime;
           prototypeName = dateTime;
       },

       {
           columnName = userId;
           name = userId;
           prototypeName = foreignId;
       },

       {
           columnName = workerId;
           name = workerId;
           prototypeName = foreignId;
       }
    );
    attributesUsedForLocking =
    (
       assignmentOfferingId,
       id,
       isCancelled,
       isPaused,
       priority,
       userId,
       workerId
    );
    className = net.sf.webcat.opinions.SurveyReminderJob;
    classProperties =
    (
       assignmentOffering,
       dueTime,
       enqueueTime,
       isCancelled,
       isPaused,
       priority,
       scheduledTime,
       user,
       worker
    );
    externalName = TSurveyReminderJob;
    internalInfo =
    {};
    name = SurveyReminderJob;
    parent = JobBase;
    primaryKeyAttributes =
    (
       id
    );
    relationships =
    (

       {
           destination = AssignmentOffering;
           joinSemantic = EOInnerJoin;
           joins =
           (

              {
                  destinationAttribute = id;
                  sourceAttribute = assignmentOfferingId;
              }
           );
           name = assignmentOffering;
       },

       {
           destination = User;
           joinSemantic = EOInnerJoin;
           joins =
           (

              {
                  destinationAttribute = id;
                  sourceAttribute = userId;
              }
           );
           name = user;
       },

       {
           destination = WorkerDescriptor;
           joinSemantic = EOInnerJoin;
           joins =
           (

              {
                  destinationAttribute = id;
                  sourceAttribute = workerId;
              }
           );
           name = worker;
       }
    );
}