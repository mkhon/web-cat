{
    attributes = (
        {
            columnName = ""; 
            externalType = BIT; 
            name = boolean; 
            userInfo = {
                isScalar = true;
                scalarDefault = false;
                type = boolean; 
            }; 
            valueClassName = NSNumber; 
            valueType = i; 
        }, 
        {
            columnName = CUPDATEMUTABLEFIELDS; 
            externalType = BIT; 
            name = updateMutableFields; 
            userInfo = {
                isScalar = true;
                scalarDefault = false;
                type = boolean; 
            }; 
            valueClassName = NSNumber; 
            valueType = i;
        }, 
        {
            allowsNull = Y; 
            columnName = CDATA; 
            externalType = BLOB; 
            name = data; 
            valueClassName = NSData; 
        }, 
        {
            allowsNull = Y; 
            columnName = CDATETIME; 
            externalType = DATETIME; 
            name = dateTime; 
            valueClassName = NSCalendarDate; 
        }, 
        {
            columnName = ""; 
            externalType = DECIMAL; 
            name = decimal; 
            valueClassName = NSDecimalNumber; 
            valueType = B; 
        }, 
        {
            allowsNull = Y; 
            columnName = ""; 
            externalType = FLOAT; 
            name = float; 
            userInfo = {
                scalarConversionMethodName = floatValue; 
                isScalar = true; 
                scalarDefault = 0.0;
                type = float;
                valueClassName = Float;
            }; 
            valueClassName = NSNumber; 
            valueType = d; 
        }, 
        {
            allowsNull = Y; 
            columnName = ""; 
            externalType = DOUBLE; 
            name = double; 
            userInfo = {
                scalarConversionMethodName = doubleValue; 
                isScalar = true; 
                scalarDefault = 0.0;
                type = double;
                valueClassName = Double;
            }; 
            valueClassName = NSNumber; 
            valueType = d; 
        }, 
        {
            allowsNull = Y; 
            columnName = CPATHNAME; 
            externalType = TINYTEXT; 
            name = filePath; 
            valueClassName = NSString; 
        }, 
        {
            allowsNull = Y; 
            columnName = ""; 
            externalType = INTEGER; 
            name = foreignId; 
            valueClassName = NSNumber; 
            valueType = l; 
        }, 
        {
            columnName = OID; 
            externalType = INTEGER; 
            name = id; 
            valueClassName = NSNumber; 
            valueType = l;
        },
        {
            allowsNull = Y; 
            columnName = ""; 
            externalType = INTEGER; 
            name = integer; 
            userInfo = {
                scalarConversionMethodName = intValue; 
                isScalar = true;
                scalarDefault = 0;
                type = int;
                valueClassName = Integer;
            }; 
            valueClassName = NSNumber; 
            valueType = i; 
        }, 
        {
            allowsNull = Y; 
            columnName = ""; 
            externalType = BIGINT; 
            name = long; 
            userInfo = {
                scalarConversionMethodName = longValue; 
                isScalar = true;
                scalarDefault = 0L;
                type = long;
                valueClassName = Long;
            }; 
            valueClassName = NSNumber; 
            valueType = l; 
        }, 
        {
            allowsNull = Y; 
            columnName = CLONGDATA; 
            externalType = LONGBLOB; 
            name = longData; 
            valueClassName = NSData; 
        }, 
        {
            allowsNull = Y; 
            columnName = CLONGTEXT; 
            externalType = LONGTEXT; 
            name = longText; 
            valueClassName = NSString; 
        }, 
        {
            allowsNull = Y; 
            columnName = CMEDIUMDATA; 
            externalType = MEDIUMBLOB; 
            name = mediumData; 
            valueClassName = NSData; 
        }, 
        {
            allowsNull = Y; 
            columnName = CMEDIUMTEXT; 
            externalType = MEDIUMTEXT; 
            name = mediumText; 
            valueClassName = NSString; 
        }, 
        {
            allowsNull = Y; 
            columnName = ""; 
            externalType = BLOB; 
            name = mutableArray; 
            userInfo = {
                adaptorValueConversionMethodName = archiveData; 
                valueFactoryMethodName = objectWithArchiveData; 
                isMutable = true; 
                valueClassName = net.sf.webcat.core.MutableArray; 
            }; 
            valueClassName = NSData; 
        }, 
        {
            allowsNull = Y; 
            columnName = ""; 
            externalType = BLOB; 
            name = mutableDictionary; 
            userInfo = {
                adaptorValueConversionMethodName = archiveData; 
                valueFactoryMethodName = objectWithArchiveData; 
                isMutable = true; 
                valueClassName = net.sf.webcat.core.MutableDictionary; 
            }; 
            valueClassName = NSData; 
        }, 
        {
            allowsNull = Y; 
            columnName = PASSWORD; 
            externalType = TINYTEXT; 
            name = password; 
            valueClassName = NSString; 
        }, 
        {
            allowsNull = Y; 
            columnName = CTEXT; 
            externalType = TEXT; 
            name = text; 
            valueClassName = NSString; 
        }, 
        {
            allowsNull = Y; 
            columnName = CTINYDATA; 
            externalType = TINYBLOB; 
            name = tinyData; 
            valueClassName = NSData; 
        }, 
        {
            allowsNull = Y; 
            columnName = ""; 
            externalType = TINYINT; 
            name = tinyInteger; 
            userInfo = {
                scalarConversionMethodName = byteValue; 
                isScalar = true; 
                scalarDefault = 0;
                type = byte;
                valueClassName = Byte;
            }; 
            valueClassName = NSNumber; 
            valueType = i; 
        }, 
        {
            allowsNull = Y; 
            columnName = CTINYTEXT; 
            externalType = TINYTEXT; 
            name = tinyText; 
            valueClassName = NSString; 
        }, 
        {
            columnName = CUSERNAME; 
            externalType = TINYTEXT; 
            name = userName; 
            valueClassName = NSString; 
        }
    ); 
    attributesUsedForLocking = (
        tinyData, 
        decimal, 
        integer, 
        tinyInteger, 
        id, 
        foreignId, 
        tinyText, 
        boolean, 
        password, 
        userName, 
        double, 
        filePath, 
        mutableArray, 
        mutableDictionary,
        updateMutableFields
    ); 
    className = EOGenericRecord; 
    classProperties = (
        tinyData, 
        mediumData, 
        data, 
        longData, 
        dateTime, 
        decimal, 
        integer, 
        tinyInteger, 
        tinyText, 
        mediumText, 
        text, 
        longText, 
        boolean, 
        password, 
        userName, 
        double, 
        filePath, 
        mutableArray, 
        mutableDictionary,
        updateMutableFields
    ); 
    fetchSpecificationDictionary = {}; 
    isAbstractEntity = Y; 
    name = EOJDBCPrototypes; 
    primaryKeyAttributes = (id); 
}
