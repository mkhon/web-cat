{
    "WebObjects Release" = "WebObjects 5.2"; 
    encoding = NSWindowsCP1252StringEncoding; 
    variables = {
        publishedPluginGroup = {
            class = WODisplayGroup; 
            dataSource = {
                class = EODatabaseDataSource; 
                editingContext = session.localContext; 
                fetchSpecification = {
                    class = EOFetchSpecification; 
                    entityName = ScriptFile; 
                    fetchLimit = 0; 
                    isDeep = YES; 
                    qualifier = {
                        class = EOKeyValueQualifier; 
                        key = isPublished;
                        selectorName = "isEqualTo:"; 
                        value = { class = java.lang.Number; value = 1; }; 
                    };
                }; 
            }; 
            fetchesOnLoad = NO; 
            formatForLikeQualifier = "%@*"; 
            localKeys = (); 
            numberOfObjectsPerBatch = 0; 
            selectsFirstObjectAfterFetch = YES; 
            sortOrdering = (
                {
                    class = EOSortOrdering; 
                    key = name; 
                    selectorName = "compareCaseInsensitiveAscending:"; 
                }
            ); 
        }; 
        unpublishedPluginGroup = {
            class = WODisplayGroup; 
            dataSource = {
                class = EODatabaseDataSource; 
                editingContext = session.localContext; 
                fetchSpecification = {
                    class = EOFetchSpecification; 
                    entityName = ScriptFile; 
                    fetchLimit = 0; 
                    isDeep = YES; 
                    qualifier = {
                        class = EOKeyValueQualifier; 
                        key = isPublished;
                        selectorName = "isNotEqualTo:"; 
                        value = { class = java.lang.Number; value = 1; }; 
                    };
                }; 
            }; 
            fetchesOnLoad = NO; 
            formatForLikeQualifier = "%@*"; 
            localKeys = (); 
            numberOfObjectsPerBatch = 0; 
            selectsFirstObjectAfterFetch = YES; 
            sortOrdering = (
                {
                    class = EOSortOrdering; 
                    key = name; 
                    selectorName = "compareCaseInsensitiveAscending:"; 
                }
            ); 
        }; 
        personalPluginGroup = {
            class = WODisplayGroup; 
            dataSource = {
                class = EODatabaseDataSource; 
                editingContext = session.localContext; 
                fetchSpecification = {
                    class = EOFetchSpecification; 
                    entityName = ScriptFile; 
                    fetchLimit = 0; 
                    isDeep = YES; 
                    qualifier = {
                    	class = EOAndQualifier;
                    	qualifiers = (
                   			{
                        		class = EOKeyValueQualifier; 
                        		key = isPublished; 
                        		selectorName = "isNotEqualTo:"; 
                        		value = { class = java.lang.Number; value = 1; }; 
                   			},
                    		{
                        		class = EOOrQualifier; 
                    			qualifiers = (
                    				{
                        				class = EOKeyValueQualifier; 
                        				key = author; 
                        				selectorName = "isEqualTo:"; 
                        				value = {_key = user;
                        					class = EOQualifierVariable; }; 
                    				}
                    			); 
                   			}
                   		);
                    };
                }; 
            }; 
            fetchesOnLoad = NO; 
            formatForLikeQualifier = "%@*"; 
            localKeys = (); 
            numberOfObjectsPerBatch = 0; 
            selectsFirstObjectAfterFetch = YES; 
            sortOrdering = (
                {
                    class = EOSortOrdering; 
                    key = name; 
                    selectorName = "compareCaseInsensitiveAscending:"; 
                }
            ); 
        }; 
    }; 
}
