AssignmentHasSuspendedSubs: WOConditional {
    condition = assignmentHasSuspendedSubs;
}

AssignmentIsUnpublished: WOConditional {
    condition = assignment.publish;
    negate = true;
}

AssignmentLink: WOHyperlink {
    string = "~assignment.titleString(coreSelections.semester)";
    href   = assignment.assignment.url;
}

AssignmentName: WOString {
    value = "~assignment.titleString(coreSelections.semester)";
}

AssignmentRepetition: WORepetition {
	item  = assignment;
	list  = assignmentGroup.displayedObjects;
	index = index;
}

CanEditAssignment: WOConditional {
    condition = canEditAssignment;
}

CanGradeAssignment: WOConditional {
    condition = canGradeAssignment;
}

DueDate: WOString {
    formatter = session.timeFormatter;
    value     = assignment.dueDate;
}

EditAssignment: WOActiveImage {
    filename  = "icons/edit.gif";
    framework = "Core";
	action    = editAssignment;
	border    = "0";
	width     = "18";
	height    = "17";
	alt       = "Edit assignment properties";
	title     = "Edit assignment properties";
}

GradeAssignment: WOActiveImage {
    filename  = "icons/comment.gif";
    framework = "Grader";
	action    = gradeAssignment;
	border    = "0";
	width     = "16";
	height    = "16";
	alt       = "Grade student submissions";
	title     = "Grade student submissions";
}

Graph: org.webcat.grader.graphs.MiniBarGraph {
    graphSummary = assignment.graphSummary;
    markScore    = mostRecentScore;
}

GraphResults: WOActiveImage {
    filename  = "icons/graph.gif";
    framework = "Grader";
	action    = graphResults;
	border    = "0";
	width     = "17";
	height    = "16";
	alt       = "Graph your results";
	title     = "Graph your results";
}

HasAssignments: WOConditional {
    condition = assignmentGroup.displayedObjects.count;
}

HasUpcomingAssignments: WOConditional {
    condition = upcomingAssignmentsGroup.displayedObjects.count;
}

HasEnqueuedJobs: WOConditional {
    condition = enqueuedJobGroup.displayedObjects.count;
}

IsFacultyUser: WOConditional {
    condition = session.user.hasFacultyPrivileges;
}

HasNoAssignments: WOConditional {
    condition = assignmentGroup.displayedObjects.count;
    negate    = true;
}

IsAdminUser: WOConditional {
    condition = session.user.hasAdminPrivileges;
}

JobAssignmentName: WOHyperlink {
    string = "~job.submission.assignmentOffering.titleString(coreSelections.semester)";
    href   = job.submission.assignmentOffering.assignment.url;
	target = "_new";
}

JobRepetition: WORepetition {
	item  = job;
	list  = enqueuedJobGroup.displayedObjects;
	index = index;
}

JobIsNotSuspended: WOConditional {
    condition = job.paused;
    negate    = true;
}

JobIsSuspended: WOConditional {
    condition = job.paused;
}

JobSubmissionTime: WOString {
    formatter = session.timeFormatter;
    value     = job.submission.submitTime;
}

SubmitAssignment: WOActiveImage {
    filename  = "icons/upload.gif";
    framework = "Core";
	action    = submitAssignment;
	border    = "0";
	width     = "18";
	height    = "18";
	alt       = "Submit to this assignment";
	title     = "Submit to this assignment";
}

SubmitNumber: WOString {
    value = job.submission.submitNumber;
}

SuspendedCount: WOString {
    value = assignment.getSuspendedSubs.count;
}

TR : org.webcat.core.TableRow {
    index       = index;
    showCaution = job.paused;
    showError   = job.submission.assignmentOffering.gradingSuspended;
}

TR2 : org.webcat.core.TableRow {
    index       = index;
    showCaution = assignment.isLate;
    showError   = assignment.gradingSuspended;
}

UpcomingAssignmentRepetition: WORepetition {
	item  = assignment;
	list  = upcomingAssignmentsGroup.displayedObjects;
	index = index;
}

ViewResults: WOActiveImage {
    filename  = "icons/report.gif";
    framework = "Core";
	action    = viewResults;
	border    = "0";
	width     = "16";
	height    = "15";
	alt       = "View your most recent results";
	title     = "View your most recent results";
}
