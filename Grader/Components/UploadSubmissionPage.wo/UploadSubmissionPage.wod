AssignmentName: WOString {
    value = prefs.assignmentOffering.titleString;
}

DifferentStudent: WOConditional {
	condition = session.impersonatingAnotherUser;
}

HasPreviousSubmissions: WOConditional {
	condition = hasPreviousSubmissions;
}

HasNoPreviousSubmissions: WOConditional {
	condition = hasPreviousSubmissions;
	negate    = true;
}

HasInstructions: WOConditional {
	condition = hasInstructions;
}

OkayToSubmit: WOConditional {
	condition = okayToSubmit;
}

HasValidFileUpload: WOConditional {
	condition = submissionInProcess.hasValidFileUpload;
}

FileUpload1: WOFileUpload {
	data     = submissionInProcess.uploadedFile;
	filePath = submissionInProcess.uploadedFileName;
	size     = 60;
	dojoType = "dojox.form.FileInput";
}

Repetition1: WORepetition {
	item = aSubmission;
	list = submissionDisplayGroup.displayedObjects;
	index = index;
}

Instructions: WOString {
	value      = prefs.assignmentOffering.assignment.fileUploadMessage;
	escapeHTML = false;
}

Navigator: net.sf.webcat.grader.GraderNavigator {
}

String1: WOString {
	value = aSubmission.submitNumber;
}

String2: WOString {
	value     = aSubmission.submitTime;
    formatter = session.timeFormatter;
}

String3: WOString {
	numberformat = "0.0";
	value        = aSubmission.result.finalScore;
}

StudentName: WOString {
	value = user.nameAndUid;
}

TR: net.sf.webcat.core.TableRow {
	index = index;
}

WCSortOrder1: net.sf.webcat.core.WCSortOrder {
	displayGroup = submissionDisplayGroup;
	displayKey = "Time";
	key = "submitTime";
}

WCSortOrder2: net.sf.webcat.core.WCSortOrder {
	displayGroup = submissionDisplayGroup;
	displayKey = "Score";
	key = "result.finalScore";
}

WCSortOrder3: net.sf.webcat.core.WCSortOrder {
	displayGroup = submissionDisplayGroup;
	displayKey = "Submission No.";
	key = "submitNumber";
}

//Page: net.sf.webcat.core.WizardPage {
//    finishEnabled = false;
//}

Page: net.sf.webcat.core.WCPageWithNavigation {
    permalink = prefs.assignmentOffering.permalink;
}

BatchNavigator: net.sf.webcat.core.WCBatchNavigator {
    displayGroup = submissionDisplayGroup;
    persistentKey = "UploadSubmissionPage.batchSize";
}
