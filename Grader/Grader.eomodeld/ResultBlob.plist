{
    attributes = (
        {
            columnName = CCONTENTS; 
            name = contents; 
            prototypeName = mutableDictionary; 
            userInfo = {
                adaptorValueConversionMethodName = archiveData; 
                isMutable = true; 
                valueClassName = "net.sf.webcat.core.MutableDictionary"; 
                valueFactoryMethodName = objectWithArchiveData; 
            }; 
        }, 
        {name = id; prototypeName = id; }, 
        {columnName = CRESULTID; name = resultId; prototypeName = foreignId; }, 
        {columnName = CSUBMISSIONID; name = submissionId; prototypeName = foreignId; }, 
        {columnName = CTAG; name = tag; prototypeName = tinyText; }, 
        {
            name = updateMutableFields; 
            prototypeName = updateMutableFields; 
            userInfo = {isScalar = true; scalarDefault = false; type = boolean; }; 
        }
    ); 
    attributesUsedForLocking = (contents, resultId, submissionId, tag, updateMutableFields); 
    className = "net.sf.webcat.grader.ResultBlob"; 
    classProperties = (contents, submission, submissionResult, tag, updateMutableFields); 
    externalName = TRESULTBLOB; 
    fetchSpecificationDictionary = {}; 
    name = ResultBlob; 
    primaryKeyAttributes = (id); 
    relationships = (
        {
            destination = Submission; 
            isToMany = N; 
            joinSemantic = EOInnerJoin; 
            joins = ({destinationAttribute = id; sourceAttribute = submissionId; }); 
            name = submission; 
        }, 
        {
            destination = SubmissionResult; 
            joinSemantic = EOInnerJoin; 
            joins = ({destinationAttribute = id; sourceAttribute = resultId; }); 
            name = submissionResult; 
        }
    ); 
}
