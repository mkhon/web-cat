<project name="Core" default="install" basedir=".">

  <import file="framework.xml"/>

  <target name="setProps" depends="common.setProps">
    <property file="../Bootstrap/build.properties" prefix="bootstrap."/>
    <propertyfile
      file="Properties"
      comment="This file is automatically rewritten by ANT, so all formatting will be trashed.">
      <entry key="bootstrap.project.version"
        value="${bootstrap.project.version}"/>
    </propertyfile>
  </target>


  <!-- ...............................................................
    Compiles and shrinks the Dojo release.
  -->
  <target name="dojo.build">
  	<delete dir="WebServerResources/dojo"/>
    <delete dir="WebServerResources/dijit"/>
    <delete dir="WebServerResources/dojox"/>
  	<java
  	  dir="dojo-release/util/buildscripts"
  	  fork="true"
  	  jar="dojo-release/util/shrinksafe/custom_rhino.jar">
  	  <arg value="build.js"/>
      <arg value="profileFile=../../webcat.profile.js"/>
  	  <arg value="action=release"/>
  	  <arg value="optimize=shrinksafe"/>
  	  <arg value="copyTests=false"/>
        <!-- this is kind of a hack, but I couldn't get Dijit's CSS images to
             work when they were in a nested directory, and if I try to use
             WebServerResources as the release name, it DELETES IT (!) before
             building, so do everything in a temp directory and then copy the
             dojo,dijit,dojox folders directly -->
  	  <arg value="releaseName=wcdojo"/>
  	  <arg value="releaseDir=../../../__dojo-tmp/"/>
  	</java>
  	<copy todir="WebServerResources">
  		<fileset dir="__dojo-tmp/wcdojo"/>
  	</copy>
  	<delete dir="__dojo-tmp"/>
  	<echo>
  	If you are running this task in Eclipse with automatic builds enabled,
    the "build" directory for the Core project may have become out-of-sync
  	after this long file-based operation. It is recommended that you clean
    the Core project now to ensure that all necessary web resources will
    be found.
  	</echo>
  </target>

</project>
