/*==========================================================================*\
 |  _Language.java
 |*-------------------------------------------------------------------------*|
 |  Created by eogenerator
 |  DO NOT EDIT.  Make changes to Language.java instead.
 |*-------------------------------------------------------------------------*|
 |  Copyright (C) 2006 Virginia Tech
 |
 |  This file is part of Web-CAT.
 |
 |  Web-CAT is free software; you can redistribute it and/or modify
 |  it under the terms of the GNU General Public License as published by
 |  the Free Software Foundation; either version 2 of the License, or
 |  (at your option) any later version.
 |
 |  Web-CAT is distributed in the hope that it will be useful,
 |  but WITHOUT ANY WARRANTY; without even the implied warranty of
 |  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 |  GNU General Public License for more details.
 |
 |  You should have received a copy of the GNU General Public License
 |  along with Web-CAT; if not, write to the Free Software
 |  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
 |
 |  Project manager: Stephen Edwards <edwards@cs.vt.edu>
 |  Virginia Tech CS Dept, 660 McBryde Hall (0106), Blacksburg, VA 24061 USA
 \*==========================================================================*/

package net.sf.webcat.core;

import com.webobjects.foundation.*;
import com.webobjects.eocontrol.*;
import java.util.Enumeration;

// -------------------------------------------------------------------------
/**
 * An automatically generated EOGenericRecord subclass.  DO NOT EDIT.
 * To change, use EOModeler, or make additions in
 * Language.java.
 *
 * @author Generated by eogenerator
 * @version version suppressed to control auto-generation
 */
public abstract class _Language
    extends er.extensions.ERXGenericRecord
{
    //~ Constructors ..........................................................

    // ----------------------------------------------------------
    /**
     * Creates a new _Language object.
     */
    public _Language()
    {
        super();
    }


    //~ Constants (for key names) .............................................

    // Attributes ---
    public static final String COMPILER_KEY = "compiler";
    public static final String NAME_KEY = "name";
    public static final String VERSION_KEY = "version";
    // To-one relationships ---
    // To-many relationships ---
    public static final String ENTITY_NAME = "Language";


    //~ Methods ...............................................................

    // ----------------------------------------------------------
    /**
     * Retrieve this object's <code>compiler</code> value.
     * @return the value of the attribute
     */
    public String compiler()
    {
        return (String)storedValueForKey( "compiler" );
    }


    // ----------------------------------------------------------
    /**
     * Change the value of this object's <code>compiler</code>
     * property.
     * 
     * @param value The new value for this property
     */
    public void setCompiler( String value )
    {
        takeStoredValueForKey( value, "compiler" );
    }


    // ----------------------------------------------------------
    /**
     * Retrieve this object's <code>name</code> value.
     * @return the value of the attribute
     */
    public String name()
    {
        return (String)storedValueForKey( "name" );
    }


    // ----------------------------------------------------------
    /**
     * Change the value of this object's <code>name</code>
     * property.
     * 
     * @param value The new value for this property
     */
    public void setName( String value )
    {
        takeStoredValueForKey( value, "name" );
    }


    // ----------------------------------------------------------
    /**
     * Retrieve this object's <code>version</code> value.
     * @return the value of the attribute
     */
    public String version()
    {
        return (String)storedValueForKey( "version" );
    }


    // ----------------------------------------------------------
    /**
     * Change the value of this object's <code>version</code>
     * property.
     * 
     * @param value The new value for this property
     */
    public void setVersion( String value )
    {
        takeStoredValueForKey( value, "version" );
    }


    // ----------------------------------------------------------
    /**
     * Retrieve object according to the <code>FetchAll</code>
     * fetch specification.
     * 
     * @param context The editing context to use
     * @return an NSArray of the entities retrieved
     */
    public static NSArray objectsForFetchAll(
            EOEditingContext context
        )
    {
        EOFetchSpecification spec = EOFetchSpecification
            .fetchSpecificationNamed( "FetchAll", "Language" );

        return context.objectsWithFetchSpecification( spec );
    }


}
