BarePage: net.sf.webcat.core.BarePage {
    title                = title;
    stylesheet           = stylesheet;
    externalJavascript   = externalJavascript;
    inlineHeaderContents = inlineHeaderContents;
    onLoad               = onLoad;
    bodyClass            = session.currentTab.cssClass;
    omitStdStyleSheet    = omitStdStyleSheet;
}

Critical: WOImage {
    filename  = "icons/exclaim.gif";
    framework = "Core";
    height    = "16";
    width     = "16";
    border    = 0;
}

DeathMessage: WOString {
	value      = application.deathMessage;
	escapeHTML = false;
}

Errors: net.sf.webcat.core.ErrorDictionaryPanel {
	errorMessages          = thisPage.messages;
	extraErrorMessage      = application.deathMessage;
	shouldShowNewlineBelow = true;
}

FeedbackLink: WOHyperlink {
	action = goToFeedback;
}

FeedbackBtn: WOActiveImage {
	action = goToFeedback;
	filename = "icons/feedback.gif";
	width    = "20";
	height   = "18";
	alt      = "Feedback";
	border   = "0";
	align    = "middle";
//	otherTagString = "width=\"20\" height=\"18\" alt=\"Feedback\" border=\"0\"";
}

Footer: net.sf.webcat.core.Footer {}

HasMenu: WOConditional {
    condition = hasSteps;
}

HasSecondTabs: WOConditional {
    condition = hasVisibleSecondaryTabs;
}

HasTitle: WOConditional {
    condition = hasTitle;
}

HelpBtn: WOActiveImage {
	href     = helpURL;
	filename = "icons/help.gif";
	target   = "\"WCHelp\"";
	width    = "16";
	height   = "16";
	alt      = "Help";
	border   = "0";
	align    = "middle";
//	otherTagString = "width=\"16\" height=\"16\" alt=\"Help\" border=\"0\"";
}

HelpLink: WOHyperlink {
	href = helpURL;
	target = "\"WCHelp\"";
}

IncludePageWrapping: WOConditional {
    condition = includePageWrapping;
}

IsSideStep: WOConditional {
	condition = isSideStep;
}

LogoutLink: WOHyperlink {
	action = logout;
}

Logo: WOImage {
	filename = "images/Web-CAT2.gif";
	width    = "50";
	height   = "20";
	alt      = "Web-CAT";
	border   = "0";
	align    = "middle";
//	otherTagString = "width=\"16\" height=\"14\" alt=\"Log out\" border=\"0\"";
}

LogoutBtn: WOActiveImage {
	action = logout;
	filename = "icons/close.gif";
	width    = "16";
	height   = "14";
	alt      = "Log out";
	border   = "0";
	align    = "middle";
//	otherTagString = "width=\"16\" height=\"14\" alt=\"Log out\" border=\"0\"";
}

MenuHeader: WOString {
	value = secondLevelSelection.label;
}

NoMenu: WOConditional {
    condition = hasSteps;
    negate    = true;
}

NoSecondTabs: WOConditional {
    condition = hasVisibleSecondaryTabs;
    negate    = true;
}

OmitPageWrapping: WOConditional {
    condition = includePageWrapping;
    negate    = true;
}

PageContent: WOComponentContent {
}

PrimaryTabClass: WOString {
	value = primaryTabClass;
}

PrimaryTabIsVisible: WOConditional {
    condition = primaryTabIsVisible;
}

PrimaryTabLabel: WOString {
	value = primaryTabItem.label;
}

PrimaryTabLink: WOHyperlink {
	action = primaryTabLink;
}

PrimaryTabs: WORepetition {
	list = session.tabs.children;
	item = primaryTabItem;
}

SecondaryTabClass: WOString {
	value = secondaryTabClass;
}

SecondaryTabIsVisible: WOConditional {
    condition = secondaryTabIsVisible;
}

SecondaryTabLabel: WOString {
	value = secondaryTabItem.label;
}

SecondaryTabLink: WOHyperlink {
	action = secondaryTabLink;
}

SecondaryTabs: WORepetition {
	list = session.tabs.selectedChild.children;
	item = secondaryTabItem;
}

SideStepTitle: WOString {
	value = lcSideStepTitle;
}

Steps: WORepetition {
	list  = secondLevelSelection.children;
	item  = tertiaryTabItem;
	index = tertiaryTabIndex;
}

StepNumber: WOString {
	value = tertiaryNumeral;
}

StepLabel: WOString {
	value = tertiaryTabItem.lcLabel;
}

StepIsSelected: WOConditional {
	condition = stepIsSelected;
}

StepUsesLink: WOConditional {
	condition = stepUsesLink;
}

StepLink: WOHyperlink {
	action = stepLink;
}

StepWithoutLink: WOConditional {
	condition = stepUsesLink;
	negate    = true;
}

CanToggleView: WOConditional {
	condition = session.user.canChangeViews;
}

StudentView: WOHyperlink {
    action = toggleStudentView;
    string = session.user.toggleViewLabel;
}

Title: WOString {
	value = title;
}

UserName: WOString {
	value = session.user.name;
}
