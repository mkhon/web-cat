{
    attributes = (
        { name = id; prototypeName = id; },
        {
        	columnName = CDESCRIPTION;
        	name = description;
        	prototypeName = mediumText;
        },
        {
        	columnName = CUSERID;
        	name = userId;
        	prototypeName = foreignId;
        },
        {
            columnName = CENTITYNAME; 
            name = wcEntityName;
            prototypeName = tinyText;
        },
        {
            columnName = CQUERYINFO; 
            name = queryInfo; 
            prototypeName = mutableDictionary; 
            userInfo = {
                adaptorValueConversionMethodName = archiveData; 
                valueFactoryMethodName = objectWithArchiveData; 
                isMutable = true; 
                valueClassName = net.sf.webcat.core.MutableDictionary; 
            };
        },
        {
            name = updateMutableFields; 
            prototypeName = updateMutableFields; 
            userInfo = {
                isScalar = true;
                scalarDefault = false;
                type = boolean; 
            }; 
        }
    ); 
    attributesUsedForLocking = (
    	description,
    	userId,
    	wcEntityName,
    	updateMutableFields
    );
    className = net.sf.webcat.reporter.ReportQuery;
    classProperties = (
    	description,
    	user,
    	wcEntityName,
    	queryInfo,
    	updateMutableFields,
    	dataSetQueries
    );
    externalName = TREPORTQUERY;
    name = ReportQuery;
    primaryKeyAttributes = (id);
    relationships = (
        {
            destination = User; 
            isToMany = N; 
            joinSemantic = EOInnerJoin; 
            joins = ({destinationAttribute = id; sourceAttribute = userId; });
            name = user;
        },
        {
        	destination = ReportDataSetQuery;
        	isToMany = Y;
        	joinSemantic = EOInnerJoin;
        	joins = ({destinationAttribute = reportQueryId; sourceAttribute = id; });
        	name = dataSetQueries;
        }
    );
}
