package net.sf.webcat.reporter;
// Generated by the WOLips Templateengine Plug-in at Oct 1, 2007 8:14:10 PM

import com.webobjects.appserver.*;
import com.webobjects.foundation.NSArray;
import com.webobjects.foundation.NSTimestamp;
import com.webobjects.foundation.NSTimestampFormatter;

public class GenerationSummaryPage extends ReporterComponent
{
	public ReportTemplate reportTemplate;

	public NSArray<ReportDataSet> dataSets;
	
	public ReportDataSet dataSet;
	
	public int index;
	
	public String reportDescription;

	public IRenderingMethod renderingMethod;

	public IRenderingMethod selectedRenderingMethod;

    public GenerationSummaryPage(WOContext context)
    {
        super(context);
    }

    public void appendToResponse(WOResponse response, WOContext context)
    {
    	reportTemplate = this.reportTemplateInSession();
    	dataSets = reportTemplate.dataSets();

    	super.appendToResponse(response, context);
    }

    public String defaultDescription()
    {
    	String time = new NSTimestampFormatter().format(new NSTimestamp());
    	return reportTemplate.name() + " - " + time;
    }
    
    public String querySummaryForDataSet()
    {
    	ReportQuery query = queryForDataSetUuid(dataSet.uuid());
    	return query.qualifier().toString();
    }

    public NSArray<IRenderingMethod> renderingMethods()
    {
    	return Reporter.getInstance().allRenderingMethods();
    }

    public WOComponent goBack()
    {
        if(dataSets.count() == 0)
        {
        	return pageWithName(PickTemplateToGeneratePage.class.getName());
        }
        else
        {
        	ConstructDataSetQueryPage page = (ConstructDataSetQueryPage)
        		pageWithName(ConstructDataSetQueryPage.class.getName());

        	page.takeValueForKey(dataSets, "dataSets");
        	page.takeValueForKey(dataSets.count() - 1, "currentDataSetIndex");

        	return page;
        }
	}
    
    public WOComponent goNext()
    {
    	String desc = reportDescription;
    	if(desc == null)
    	{
    		NSTimestampFormatter fmt = new NSTimestampFormatter();
    		desc = reportTemplate.name() + " - " +
    			fmt.format(new NSTimestamp());
    	}
    	
    	setReportDescriptionInSession(desc);
    	setRenderingMethodInSession(selectedRenderingMethod.methodName());

    	commitReportGeneration();
    	return pageWithName(GeneratedReportPage.class.getName());
    }
}