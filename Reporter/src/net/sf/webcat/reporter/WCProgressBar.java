package net.sf.webcat.reporter;
// Generated by the WOLips Templateengine Plug-in at Apr 10, 2007 4:05:37 PM

import com.webobjects.appserver.*;

public class WCProgressBar extends WOComponent
{
    //~ Constructors ..........................................................

    // ----------------------------------------------------------
    /**
     * Default constructor.
     * @param context The page's context
     */
    public WCProgressBar( WOContext context )
    {
        super( context );
    }


    //~ KVC Attributes (must be public) .......................................

    public double fractionDone = 0.0;
    public String taskDescription = null;

    public static final int WIDTH = 200;

    //~ Methods ...............................................................

    // ----------------------------------------------------------
    /**
     * Get the width of this progress bar's active portion in pixels.
     * @return The width of the filled portion of the bar
     */
    public String width()
    {
        return "" + (int)(100 * fraction()) + "%";
    }


    // ----------------------------------------------------------
    /**
     * Get the nearest integer percent value (from 0-100) for this bar's
     * active portion.
     * @return The width of the filled portion of the bar as an integer
     * percent value
     */
    public int percent()
    {
        return (int)( fraction() * 100.0 + 0.5 );
    }


    // ----------------------------------------------------------
    /**
     * Get a string-formatted version of the {@link #percent()} result,
     * including a percent sign (%).
     * @return The percent as a string
     */
    public String percentLabel()
    {
        return "" + percent() + "%";
    }


    // ----------------------------------------------------------
    /**
     * Get the fractional value (from 0.0-1.0) for this bar's
     * active portion.
     * @return The width of the filled portion of the bar as a real
     * number between 0.0-1.0
     */
    public double fraction()
    {
        double result = fractionDone;
        if ( result < 0.0 )
        {
            result = 0.0;
        }
        else if ( result > 1.0 )
        {
            result = 1.0;
        }
        return result;
    }
}