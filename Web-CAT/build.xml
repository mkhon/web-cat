<project name="Web-CAT" default="build.redistributable.war" basedir=".">

    <!-- ==============================================================  -->
    <!-- main targets                                                    -->
    <!-- ==============================================================  -->

    <!-- ............................................................... -->
    <target name="build.redistributable.war"
        depends="build, export.jar, install.pending.updates"
        description="Build a publishable copy of the WAR distribution."/>


    <!-- ............................................................... -->
    <target name="install.redistributable.war"
        depends="build.redistributable.war, install.war"
        description="Build and install the WAR distribution."/>


    <!-- ............................................................... -->
    <target name="build"
        depends="setProps, init.build, build.woapp, ssdd, war"
        description="Build a local copy of the application as a WAR."/>


    <!-- install.traditional .......................................... -->
    <target name="install.traditional"
      depends="setProps, init.build.traditional, build.traditional.woapp"
      description="Build and install as a traditional WO application."/>


    <!-- ............................................................... -->
    <target name="clean" depends="setProps">
          <delete dir="dist"/>
    </target>


    <!-- ==============================================================  -->
    <!-- initialization/setup targets                                    -->
    <!-- ==============================================================  -->

    <!-- property determination ........................................ -->
    <target name="setProps">
        <property file="build.properties"/>
        <property file="${user.home}${file.separator}Library${file.separator}wobuild.properties"/>
        <condition property="wo.properties.check.failed">
            <not><and>
                <isset property="wo.wosystemroot"/>
                <isset property="wo.wolocalroot"/>
            </and></not>
        </condition>
        <fail
            message="Could not find ${user.home}${file.separator}Library${file.separator}wobuild.properties."
            if="wo.properties.check.failed"/>
        <property name="install.dir"
            value="${wo.wolocalroot}/Library/WebObjects/Applications"/>
    </target>


    <!-- basic initializations  ........................................ -->
    <target name="init.build" depends="setProps">
        <property name="dest.dir" value="dist"/>
        <tstamp/>
        <copy file="Properties.master" tofile="Properties"/>
        <propertyfile file="Properties"
            comment="This file is automatically rewritten by ANT, so all formatting will be trashed.">
            <entry key="webcat.version.date" value="${DSTAMP}"/>
        </propertyfile>
    </target>


    <!-- basic initializations  ........................................ -->
    <target name="init.build.traditional" depends="setProps">
        <property name="dest.dir" value="${install.dir}"/>
        <tstamp/>
        <copy file="Properties.master" tofile="Properties"/>
        <propertyfile file="Properties"
            comment="This file is automatically rewritten by ANT, so all formatting will be trashed.">
            <entry key="webcat.version.date" value="${DSTAMP}"/>
        </propertyfile>
        <echo message="stamp = ${DSTAMP}"/>
    </target>


    <!-- ==============================================================  -->
    <!-- Lower-level targets                                             -->
    <!-- ==============================================================  -->

    <!-- ............................................................... -->
    <target name="build.woapp" depends="init.build">
        <fail unless="dest.dir"/>

        <taskdef name="woapplication"
            classname="org.objectstyle.woproject.ant.WOApplication"/>

        <!-- add webXML="true" to generate a web.xml file -->
        <woapplication name="${project.name}"
            stdFrameworks="false"
            destDir="${dest.dir}/${project.name}/WEB-INF"
            customInfoPListContent="${customInfoPListContent}"
            principalClass="${principalClass}"
            webXML="false">
            <classes dir="${classes.dir}">
                <patternset>
                    <includesfile name="woproject/classes.include.patternset"/>
                    <excludesfile name="woproject/classes.exclude.patternset"/>
                </patternset>
            </classes>
            <wsresources dir=".">
                <patternset>
                <includesfile name="woproject/wsresources.include.patternset"/>
                <excludesfile name="woproject/wsresources.exclude.patternset"/>
                </patternset>
            </wsresources>
            <resources dir=".">
                <patternset>
                  <includesfile name="woproject/resources.include.patternset"/>
                  <excludesfile name="woproject/resources.exclude.patternset"/>
                </patternset>
            </resources>
            <frameworks root="${wo.wosystemroot}" embed="true">
                <patternset>
                <includesfile name="woproject/ant.frameworks.wo.wosystemroot"/>
                </patternset>
            </frameworks>
            <frameworks root="${wo.wolocalroot}" embed="true">
                <patternset>
                <includesfile name="woproject/ant.frameworks.wo.wolocalroot"/>
                </patternset>
            </frameworks>
            <frameworks root="${user.home}" embed="true">
                <patternset>
                    <includesfile name="woproject/ant.frameworks.user.home"/>
                </patternset>
            </frameworks>
            <otherclasspath root="${wo.wosystemroot}">
                <patternset>
                <includesfile name="woproject/ant.classpaths.wo.wosystemroot"/>
                </patternset>
            </otherclasspath>
            <lib dir="../extra-jars">
                <include name="**/*.jar"/>
                <exclude name="**/*.woa/**"/>
            </lib>
           </woapplication>
        <!-- delete local license key, so developer's license isn't
             included in the redistributable WAR file.   -->
        <delete
            file="${dest.dir}/${project.name}/WEB-INF/${project.name}.woa/Contents/Frameworks/Library/Frameworks/JavaWebObjects.framework/Resources/License.key"/>
    </target>


    <!-- ............................................................... -->
    <target name="build.traditional.woapp" depends="init.build.traditional">
        <fail unless="dest.dir"/>

        <taskdef name="woapplication"
            classname="org.objectstyle.woproject.ant.WOApplication"/>

        <!-- add webXML="true" to generate a web.xml file -->
        <woapplication name="${project.name}"
            stdFrameworks="false"
            destDir="${dest.dir}"
            customInfoPListContent="${customInfoPListContent}"
            principalClass="${principalClass}"
            webXML="false">
            <classes dir="${classes.dir}">
                <patternset>
                    <includesfile name="woproject/classes.include.patternset"/>
                    <excludesfile name="woproject/classes.exclude.patternset"/>
                </patternset>
            </classes>
            <wsresources dir=".">
                <patternset>
                <includesfile name="woproject/wsresources.include.patternset"/>
                <excludesfile name="woproject/wsresources.exclude.patternset"/>
                </patternset>
            </wsresources>
            <resources dir=".">
                <patternset>
                  <includesfile name="woproject/resources.include.patternset"/>
                  <excludesfile name="woproject/resources.exclude.patternset"/>
                </patternset>
                </resources>
            <frameworks root="${wo.wosystemroot}">
                <patternset>
                <includesfile name="woproject/ant.frameworks.wo.wosystemroot"/>
                </patternset>
            </frameworks>
            <frameworks root="${wo.wolocalroot}">
                <patternset>
                <includesfile name="woproject/ant.frameworks.wo.wolocalroot"/>
                </patternset>
            </frameworks>
            <frameworks root="${user.home}">
                <patternset>
                    <includesfile name="woproject/ant.frameworks.user.home"/>
                </patternset>
            </frameworks>
            <otherclasspath root="${wo.wosystemroot}">
                <patternset>
                <includesfile name="woproject/ant.classpaths.wo.wosystemroot"/>
                </patternset>
            </otherclasspath>
            <lib dir=".">
                <include name="Add .jar's that should be copied in the woa."/>
                <exclude name="**/*.woa/**"/>
            </lib>
        </woapplication>
    </target>


    <!-- war target .................................................... -->
    <target name="war" depends="ssdd">
        <property file="Properties"/>
        <property name="war.file.name" value="../${project.name}_${webcat.version.major}.${webcat.version.minor}.${webcat.version.revision}.war"/>
        <war destfile="${war.file.name}"
            webxml="web.xml"
            basedir="${dest.dir}/${project.name}">
            <lib dir="${wo.wosystemroot}/Library/Frameworks/JavaWOJSPServlet.framework/WebServerResources/Java/">
                <include name="JavaWOJSPServlet_client.jar"/>
            </lib>
            <lib dir="../Bootstrap">
                <include name="Bootstrap.jar"/>
            </lib>
        </war>
    </target>


    <!-- ...............................................................
         This target was used long ago to patch the woproject-generated
         web.xml file, but since we added our own Bootstrap.jar support,
         this task is no longer needed.  It was used to fix up the ordering
         of frameworks in the classpath generated in the web.xml file.
    -->
    <target name="patchWebXML"
        depends="build.woapp"
        if="${never}">
        <exec executable="perl" failonerror="true">
            <arg file="patchWebXML.pl"/>
            <arg value="${dest.dir}/${project.name}/WEB-INF/${project.name}.woa/Contents/web.xml"/>
        </exec>
        <exec executable="perl" failonerror="true">
            <arg file="patchClasspathTxt.pl"/>
            <arg value="${dest.dir}/${project.name}/WEB-INF/${project.name}.woa/Contents/Windows/CLSSPATH.TXT"/>
        </exec>
    </target>


    <!-- ssdd target ................................................... -->
    <target name="ssdd" depends="patchWebXML">
        <mkdir dir="${dest.dir}/${project.name}/WEB-INF/tlds"/>
        <copy todir="${dest.dir}/${project.name}/">
            <fileset dir=".">
                <include name="index.html"/>
            </fileset>
        </copy>
        <copy todir="${dest.dir}/${project.name}/WEB-INF/tlds">
            <fileset dir="${wo.wosystemroot}/Library/Frameworks/JavaWOJSPServlet.framework/Resources/">
                <include name="WOtaglib_1_0.tld"/>
            </fileset>
        </copy>
     </target>


    <!-- ...............................................................
         Copies the generated war file to your servlet container's webapp
         installation directory so it will be auto-installed.
    -->
    <target name="install.war" depends="war">
        <fail message="Property servlet.install.dir is not defined."
            unless="servlet.install.dir"/>
        <copy file="${war.file.name}"
            tofile="${servlet.install.dir}/${project.name}.war"/>
     </target>

    <!-- ...............................................................
         Jars up the application as a pseudo-subsystem in a form that can
         be used for Web-CAT server updates.
    -->
    <target name="export.jar" depends="war">
        <!-- need to jar framework up somewhere, based on version number -->
        <property name="export.jar.name"
            value="../webcat_${webcat.version.major}.${webcat.version.minor}.${webcat.version.revision}.jar"/>
        <jar destfile="${export.jar.name}"
        basedir="${dest.dir}/${project.name}"
        excludes="WEB-INF/${project.name}.woa/Contents/Frameworks/**"/>
    </target>


    <!-- ...............................................................
         Copies the exported jar file to a servlet's pending updates
         directory.  Set the pending.updates.dir property in your
         ~/Library/wobuild.properties file to enable this action.
    -->
    <target name="install.pending.updates"
        if="pending.updates.dir"
        depends="export.jar">
        <copy todir="${pending.updates.dir}" file="${export.jar.name}"/>
    </target>

</project>
